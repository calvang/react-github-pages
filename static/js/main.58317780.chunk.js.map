{"version":3,"sources":["logo.svg","road.jpg","mountains.jpg","autumn.jpg","Navbar.js","Bottombar.js","Carousel.js","Home.js","CV.js","Projects.js","About.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","link","label","map","page","i","React","Component","Bottombar","Slider","props","onChange","value","setState","state","autoPlay","animationSpeed","infinite","this","dots","src","image1","alt","image2","image3","Home","logo","CV","Routes","exact","path","component","Projects","About","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.58317780.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/road.5359a1c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mountains.7cc252b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/autumn.731a2844.jpg\";","import React from 'react';\nimport './App.css';\n\nclass Navbar extends React.Component {\n  render() {\n    const links = [\n      {\n        link: \"/#Projects\",\n        label: \"Projects\"\n      },\n      {\n        link: \"/#CV\",\n        label: \"CV\"\n      },\n      {\n        link: \"/#About\",\n        label: \"About\"\n      }\n    ]\n    return (\n      <div className=\"navbar\">\n        <a href=\"/\" className=\"title-item title\"><b>React-Github-Pages</b></a>\n        <div>\n        {\n          links.map((page, i) => {\n            return (<a href={page.link} className=\"bar-item button\">{page.label}</a>)\n          })\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;","import React from 'react';\nimport './App.css';\n\nclass Bottombar extends React.Component {\n  render() {\n    return (\n      <div className=\"bottombar\">\n        <a href=\"/\" className=\"bottom title\">Contact</a>\n      </div>\n    );\n  }\n}\n\nexport default Bottombar;","import React from 'react';\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\nimport image1 from './road.jpg';\nimport image2 from './mountains.jpg';\nimport image3 from './autumn.jpg';\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n    };\n  }\n\n  onChange = value => this.setState({ value });\n\n  render() {\n    return (\n      <div>\n        <Carousel\n          autoPlay={10000}\n          animationSpeed={1000}\n          infinite\n          value={this.state.value}\n          onChange={this.onChange}\n          dots\n        >\n          <img className=\"img-example\" src={image1} alt='img1'/>\n          <img className=\"img-example2\" src={image2} alt='img2'/>\n          <img className=\"img-example3\" src={image3} alt='img3'/>\n        </Carousel>\n      </div>\n    );\n  }\n}\n\nexport default Slider;","import React from 'react';\nimport Slider from \"./Carousel\";\nimport logo from './logo.svg';\nimport './App.css';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-body\">\n          <Slider />\n          <h2 className=\"header padded-top\">\n            Sample Personal Github.io page built on Reactjs\n          </h2>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h4 className=\"padded-bottom\">\n            Get started on your own Reactjs project today!\n          </h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass CV extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-body\">\n          <h2 className=\"header padded-top\">\n            My Resume/CV\n          </h2>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h4 className=\"padded-bottom\">\n            Stylize your CV here (or import a pdf)!\n          </h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CV;\n","import React from 'react';\nimport Slider from \"./Carousel\";\nimport logo from './logo.svg';\nimport './App.css';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-body\">\n          <h2 className=\"header padded-top\">\n            My Projects\n          </h2>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h4 className=\"padded-bottom\">\n            Add your personal Projects here!\n          </h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass CV extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-body\">\n          <h2 className=\"header padded-top\">\n            About Me\n          </h2>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h4 className=\"padded-bottom\">\n            Put a short biographical blurb here!\n          </h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CV;\n","import React from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport Home from './Home';\nimport CV from './CV';\nimport Projects from './Projects';\nimport About from './About';\nimport './App.css';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path='/' component={Home}></Route>\n          <Route exact path='/Projects' component={Projects}></Route>\n          <Route exact path='/CV' component={CV}></Route>\n          <Route exact path='/About' component={About}></Route>\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Routes;\n","import React from 'react';\nimport Navbar from \"./Navbar\";\nimport Bottombar from  \"./Bottombar\";\nimport Routes from \"./Routes\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <Routes />\n      <Bottombar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}